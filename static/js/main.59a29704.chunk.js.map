{"version":3,"sources":["components/Todo.tsx","App.tsx","index.tsx"],"names":["Todo","todo","handleRemove","task","day","onClick","App","useState","setTask","setDay","todoList","setTodoList","handleChange","event","target","name","value","Number","removedTodo","filter","className","type","placeholder","onChange","newTask","map","ReactDOM","render","document","getElementById"],"mappings":"sOAYeA,EAVF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aACjB,OACI,gCACI,4BAAID,EAAKE,OACT,4BAAIF,EAAKG,MACT,wBAAQC,QAAS,kBAAIH,EAAaD,EAAKE,OAAvC,wBCgDGG,EAlDA,WAEb,MAAwBC,mBAAiB,IAAzC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAAsBD,mBAAiB,GAAvC,mBAAOH,EAAP,KAAYK,EAAZ,KACA,EAAgCF,mBAAkB,IAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACG,SAApBA,EAAMC,OAAOC,KACdP,EAAQK,EAAMC,OAAOE,OAErBP,EAAOQ,OAAOJ,EAAMC,OAAOE,SAWzBd,EAAe,SAACgB,GACpBP,EAAYD,EAASS,QAAO,SAAClB,GAAD,OAASiB,GAAajB,EAAKE,UAGzD,OACE,sBAAKiB,UAAU,MAAf,UACE,0CACA,gCACE,uBACEC,KAAK,OACLC,YAAY,oBACZN,MAAOb,EACPY,KAAK,OACLQ,SAAWX,IAEb,uBACES,KAAK,SACLC,YAAY,gBACZN,MAAOZ,EACPW,KAAK,MACLQ,SAAWX,IAEb,wBAAQP,QA7BQ,WACpB,IAAMmB,EAAgB,CAACrB,KAAMA,EAAMC,IAAKA,GACxCO,EAAY,GAAD,mBAAKD,GAAL,CAAec,KAC1BhB,EAAQ,IACRC,EAAO,IAyBH,oBAEF,oCAAOC,EAASe,KAAI,SAACxB,GAAD,OAAS,cAAC,EAAD,CAAMA,KAAMA,EAAMC,aAAeA,OAA9D,WC7CNwB,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.59a29704.chunk.js","sourcesContent":["import {IPropsTodo} from \"./interfaces\"\r\n\r\nconst Todo = ({todo, handleRemove}: IPropsTodo) => {\r\n    return (\r\n        <div>\r\n            <p>{todo.task}</p>\r\n            <p>{todo.day}</p>\r\n            <button onClick={()=>handleRemove(todo.task)}>remove</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React, { FC, useState, ChangeEvent } from 'react';\nimport './App.css';\nimport { ITodo } from './components/interfaces';\nimport Todo from './components/Todo';\n\nconst App:FC = () => {\n  \n  const [task, setTask] = useState<string>(\"\")\n  const [day, setDay] = useState<number>(0)\n  const [todoList, setTodoList] = useState<ITodo[]>([])\n\n  const handleChange = (event:ChangeEvent<HTMLInputElement>):void => {\n    if(event.target.name===\"task\") {\n      setTask(event.target.value)\n    } else {\n      setDay(Number(event.target.value))\n    }\n  }\n\n  const handleOnClick = () => {\n    const newTask:ITodo = {task: task, day: day};\n    setTodoList([...todoList, newTask]);\n    setTask(\"\");\n    setDay(0);\n  }\n  \n  const handleRemove = (removedTodo:string):void => {\n    setTodoList(todoList.filter((todo)=> removedTodo!=todo.task))\n  }\n\n  return (\n    <div className=\"App\">\n      <h3>Todo App</h3>\n      <div>\n        <input \n          type=\"text\"\n          placeholder=\"type task here...\"\n          value={task}\n          name=\"task\"\n          onChange= {handleChange}\n        />\n        <input \n          type=\"number\"\n          placeholder=\"remaining day\"\n          value={day}\n          name=\"day\"\n          onChange= {handleChange}\n        />\n        <button onClick={handleOnClick}>Add</button>\n      </div>\n      <div> {todoList.map((todo)=> <Todo todo={todo} handleRemove= {handleRemove} />)} </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}